setwd("C:/Users/SJ/RepData_PeerAssessment1")
getwd()
unzip("activity.zip")
dir()
help(aggregate)
help(read.csv)
activity <- read.csv("activity.csv")
str(activity)
activity <- read.csv("activity.csv", colClasses = c("numeric","Date","numeric"))
str(activity)
help(tapply)
help(with)
activity <- read.csv("activity.csv")
str(activity)
head(activity[c("steps")])
head(activity[c("steps")], 100)
head(activity$steps, 100)
str(activity$steps)
str((activity[c("steps")])
)
str(activity[c("steps")])
activityDailySum <- aggregate(steps ~ date, data = activity, FUN=sum)
str(activityDailySum)
hist(activityDailySum$steps, xlab="Total steps by day", ylab="counts", +
main="Histogram of Total Number of Steps taken each day")
hist(activityDailySum$steps, xlab="Total steps by day", ylab="counts", main="Histogram of Total Number of Steps taken each day")
hist(activityDailySum$steps, xlab="Total steps by day", ylab="counts", main="Total Number of Steps taken each day")
hist(activityDailySum$steps, xlab="Total steps by day", ylab="counts",
main="Total number of steps taken each day")
meanStepsDaily < - mean(activityDailySum)
meanStepsDaily <- mean(activityDailySum$steps)
meanStepDaily
meanStepsDaily
medianStepsDaily <- median(activityDailySum$steps)
medianStepsDaily
str(activity)
head(activity$interval, 500)
hist(activityDailySum$steps, xlab="Total steps by day", ylab="counts",
main="Total number of steps taken each day",
col="blue")
activityDailyAveSteps <- aggregate(steps ~ interval, data = activity, FUN=mean)
str(activityDailyAveSteps)
head(activityDailyAveSteps$interval)
activityDailyAveSteps$interval
intervalAveSteps <- aggregate(steps ~ interval, data = activity, FUN=mean)
str(intervalAveSteps)
intervalAveSteps$steps
str(intervalAveSteps)
plot(intervalAveSteps, type="l", xlab="5-minute interval",
main="Daily verage number of steps per 5 min-interval")
plot(intervalAveSteps, type="l", xlab="5-minute interval",
main="Daily verage number of steps per 5 min-interval")
intervalMaxNumberSteps <- intervalAveSteps$interval[which.max(intervalAveSteps$steps)]
intervalMaxNumberSteps
naNum <- sum(is.na(activity))
naNum
str(activity)
mstep <- with(activity, tapply(steps, interal, mean, na.rm=T))
mstep <- with(activity, tapply(steps, interval, mean, na.rm=T))
str(mstep)
mstep
intervalAveSteps
str(intervalAveSteps)
str(activity)
dim(activity)
str(intervalAveSteps)
tmpMerge <- merge(activity, interalAveSteps, by="interval", suffixes = c(".x", ".y"))
tmpMerge <- merge(activity, intervalAveSteps, by="interval", suffixes = c(".x", ".y"))
str(tmpMerge)
head(tmpMerge, 200)
tmpMerge <- merge(activity, intervalAveSteps, by.y="interval", suffixes = c(".x", ".y"))
tmpMerge <- merge(activity, intervalAveSteps, by.y="interval")
help(ddply)
library(plyr)
help(ddply)
imputeMean <- function(x) replace(x, is.na(x), mean(x, na.rm = TRUE))
tmpDFRM <- ddply(activty, ~interval, transform, steps = imputeMean(steps))
tmpDFRM <- ddply(activity, ~interval, transform, steps = imputeMean(steps))
str(tmpDFRM)
head(tmpDFRM, 100)
activityNew <- tmpDFRM[with(tmpDFRM, order(date, interval)) ]
str(tmpDFRM)
activityNew <- tmpDFRM[with(tmpDFRM, order(date, interval)), ]
str(activityNew)
head(activityNew, 100)
activityNewDailySum <- aggregate(steps ~ date, data = activityNew, FUN=sum)
str(activityNewDailySum)
str(activityDailySum)
activityDailySum
activityNewDailySum
str(activity)
hist(activityNewDailySum$steps, xlab="Total steps per day", ylab="counts",
main="Total number of steps taken each day with replaced mean ",
col="green")
meanNewStepsDaily <- mean(activityNewDailySum$steps)
meanNewStepsDaily
medianNewStepsDaily <- median(activityNewDailySum$steps)
medianNewStepsDaily
activityNew$weekday <- weekdays(strptime(activityNew$date, format=%Y-%m-%d"))
activityNew$weekday <- weekdays(strptime(activityNew$date, format="%Y-%m-%d"))
str(activityNew$weekday)
weekend <- activityNewweekday == "Saturday" | "Sunday"
weekend <- activityNew$weekday == "Saturday" | "Sunday"
weekend <- (activityNew$weekday == "Saturday") | (activityNew$weekday == "Sunday")
str(weekend)
activityNew$weekday[weekend]  <- "weekend"
activityNew$weekday[!weekend] <- "weekday"
head(activityNew$weekday, 100)
head(activityNew$weekday, 300)
head(activityNew$weekday, 500)
head(activityNew$weekday, 1000)
head(activityNew$weekday, 2000)
require("lattice")
xyplot(steps ~ interval | weekday, data = activityNew, layout=c(1,2), type="l")
